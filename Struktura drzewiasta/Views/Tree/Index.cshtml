@using Struktura_drzewiasta.DTO
@model IList<Struktura_drzewiasta.Models.Node>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Struktura drzewiasta";
}

<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>

@functions{
    private void ShowTree(Node node)
    {
        <li>
            @if (node.Children.Count != 0)
            {
                <span class="bi bi-folder-fill" v-on:click="toggle($event)" style="cursor:pointer"></span>
            }
            else
            {
                <span class="bi bi-folder" style="cursor:not-allowed"></span>
            }
            <label>
                @Html.RadioButton("Id", node.Id.ToString())
                @node.Id
                @node.Name
            </label>
            @Html.ActionLink("", "Delete", "Tree", new { id = node.Id }, new { @class = "bi bi-trash-fill text-decoration-none text-reset" })
        @if (node.Children.Count != 0)
        {
        <ul style="list-style:none">
            @foreach (var child in node.Children)
            {
                ShowTree(child);
            }
        </ul>
        }
        </li>
    }
}

<div class="d-flex" id="app">
    <div class="w-25">
        @{
            var dto = new CreateNodeDto()
            {
                ParentNodeSelectList = Model.ToList().ConvertAll(i =>
                {
                    return new SelectListItem()
                    {
                        Text = i.Id + ". " + i.Name,
                        Value = i.Id.ToString(),
                        Selected = false
                    };
                })
            };
            await Html.RenderPartialAsync("_CreateForm", dto);
        }
        
    </div>
    <div class="w-75">
        @if (Model.FirstOrDefault() is not null)
        {
            @using (Html.BeginForm("Edit", "Tree", null, FormMethod.Post, true, new { @class="d-flex flex-row"}))
            {
                <div class="w-25 d-flex flex-column">
                    <h3>Edit</h3>
                    @Html.Label("Name", "Name: ")
                    @Html.TextBox("Name")
                    @Html.Label("TargetParent", "Parent: ")
                    @Html.DropDownList("TargetParent", new SelectList(Model.Select(m=>m.Id + ". " + m.Name)), "Select parent")
                    <input type="submit" class="mt-3"/>
                </div>
                <div class="w-75">
                    <div class="d-flex">
                        <button class="w-50 mb-3" type="button" v-on:click="foldList($event)">Fold list</button>
                        <button class="w-50 mb-3" type="button" v-on:click="unfoldList($event)">Unfold list</button>
                    </div>
                    <ul style="list-style:none" id="root">
                        @{ ShowTree(Model.First()); }
                    </ul>
                </div>
            }
        }
    </div>
</div>

<script>
    var vueApp = new Vue({
        el: '#app',
        data: {
        },
        methods: {
            toggle: (e) => {
                let list = e.target.parentNode.querySelector("ul").style;
                list.display != "none" ? list.display = "none": list.display="block";
            },

            foldList: (e) => {
                let nodes = document.querySelectorAll("#root ul");
                for(node of nodes){
                    node.style.display="none";
                }
            },

            unfoldList: (e) => {
                let nodes = document.querySelectorAll("#root ul");
                for(node of nodes){
                    node.style.display="block";
                }
            }
        }
    })
</script>